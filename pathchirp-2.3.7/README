This code uses chirp packet trains (UDP) to estimate available
bandwidth (unused capacity) in the network. The receiver
performs available bandwidth computation and stores the results in a
file.

NEW FEATURES TO THIS RELEASE
============================

1. EASE OF DEPLOYMENT: The sender program needs to be run just once
irrespective of the number of experiments planned. This simplifies
deployment greatly. Receivers initiate probing connections.

2. SECURITY: Packet security checksums prevent malicious attackers
from using deployed senders to create UDP storms. See Src/hash.c if
you want to use this feature.

3. AUTOMATIC RATE ADJUSTMENT: The code automatically adapts chirp parameters
 to suit the path bandwidth. 

4. INTERRUPT COALESCENCE: In case packets arrival interrupts are combined
(coalesced) by the NIC cards use the -J option at the receiver. 


CORRESPONDENCE
==============

Please do send your comments about the performance of this available
bandwidth estimation tool, and any changes you feel would make the
tool more convenient or user friendly. Please let us know what
applications you need available bandwidth tools for so that we can meet
your needs best. The current tool is designed to be a low bit rate 
tool for monitoring available bandwidth over long durations of time. 

Contact: Vinay Ribeiro, vinay@rice.edu


COMPILE INSTRUCTIONS
====================
Run the following:
1) ./configure   
2) make
                                                                             
The following will be generated:

Bin/<host_cpu>/pathchirp_rcv
Bin/<host_cpu>/pathchirp_snd

For example on certain Linux boxes <host_cpu>=i686.


RUNNING EXPERIMENTS
===================

1) SENDER (needs to be run just once)

Bin/<host_cpu>/pathchirp_snd 

Options:
	 -U <sender port, default=8365>
	 -h 	Help: produces this output
	 -v version
	 -D print debug information

NOTE ON PORT NUMBER: In case the default port number is already used
at the sender, try out other port numbers larger than 1024 using the
-U option.  The receiver must then use the same port number with the -U 
option.

2) RECEIVER (must run for every experiment)

Bin/<host_cpu>/pathchirp_rcv -S <sender> -t <experiment duration (secs)>

 ** In case of interrupt coalescence on Gigabit networks use the -J option:
Example:
Bin/<host_cpu>/pathchirp_rcv -S <sender> -t <expt. duration (secs)> -J 6


All Options:

	 -n <number of estimates to smooth over, default=11>
 	 -d <decrease factor (>1), default=1.5>
 	 -b <busy period length (integer >2), default=5>
 	 -U <receiver port (chirp UDP), default=8365 (1024-65535)>
 	 -h Help: produces this output
	 -S 	 sender host name or IP address 
	 -J 	 number of packets per Jumbo packet,default=1. In case of packet coalescence use values larger than 1, e.g. -J 6 
	 -l 	 lowest rate (Mbps) to probe at within chirp, default=10.000000Mbps. NOTE: by default pathchirp will find an appropriate probing range.
	 -u 	 highest rate (Mbps) to probe at within chirp, default=200.000000Mbps
	 -p 	 packet size <40-8200>,default=1000 bytes
	 -t 	 duration of experiment(sec), default=600 sec 
	 -s 	 spread factor: ratio of consecutive inter-arrivals within a chirp, default=1.2 
	 -a 	 average probing rate (Mbps), default=0.3Mbps 
	 -D print debug information 
	 -v version

OUTPUT FILE
===========

At the RECEIVER the file

	 <sender_name>_<receiver_name>_<time stamp>.instbw

will be generated in the directory from which the code is run.


FORMAT of the file: 

 <time_stamp> <avail-bw estimate (Mbps)>


DEBUG
=====
If you have problems with running the code we request that you run the
code with the "-D" option at sender and receiver. 

The file:

 <sender_name>_<receiver_name>_<time stamp>.debug

will be generated. 

FORMAT of debug file:

<chirp number> <packet number>  <sender timestamp> <receiver timestamp>

Please send us the
<sender_name>_<receiver_name>_<time stamp>.debug 
file as well as any information printed to stderr. To save all
information printed on stderr in a file use

Bin/<host_cpu>/pathchirp_rcv [options] > & [outputfilename]
Bin/<host_cpu>/pathchirp_snd [options] > & [outputfilename]
      








